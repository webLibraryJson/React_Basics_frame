{"version":3,"sources":["redux/constant.js","redux/reducers/count.js","redux/reducers/person.js","redux/reducers/index.js","redux/store.js","redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/actions/person.js","App.jsx","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","countReducer","preState","action","type","data","initSate","id","name","age","personReducer","perState","combineReducers","count","persons","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","increment","Count","state","add","value","sumcont","props","del","decrement","oddTerm","ybAdd","anyceIncrement","this","personArr","ref","c","onClick","Component","connect","length","time","dispatch","setTimeout","Person","personObj","nanoid","addPerson","placeholder","map","personobj","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.997e4e68.chunk.js","sourcesContent":["export const INCREMENT = 'increment'\r\nexport const DECREMENT = 'decrement'\r\nexport const ADD_PERSON ='add_person'","import {INCREMENT,DECREMENT} from '../constant'\r\nconst initState = 0\r\nfunction countReducer(preState = initState,action){\r\n    //从action对象中获取：type、data\r\n    const {type,data} = action\r\n    //根据type决定如何加工数据\r\n    switch(type){\r\n        case INCREMENT:\r\n            return preState + data;\r\n        case DECREMENT:\r\n            return preState - data;\r\n        default:\r\n            return preState\r\n    }\r\n}\r\n\r\nexport default countReducer;","import {ADD_PERSON} from '../constant'\r\n//初始化人的列表\r\nconst initSate = [{id:'001',name:'tom',age:18}]\r\nfunction personReducer(perState = initSate,action){\r\n    const {type,data} = action\r\n    switch (type) {\r\n        case ADD_PERSON://添加一个人\r\n            //perState.unshift(data); //此处不可以这样写，这样会导致preState被改写了，personReducer就不会从新渲染（personReducer是纯函数）\r\n            return [data,...perState]\r\n        default:\r\n            return perState;\r\n    } \r\n}\r\n\r\nexport default personReducer","/* \r\n    该文件用于汇总所有的reducer为一个总的reducer\r\n*/\r\n//引入combineReducers，用于汇总多个rudecer\r\nimport {combineReducers} from 'redux'\r\n//引入为Count组件服务的reducer\r\nimport count  from './count'\r\n//引入personReducer组件服务的reducer\r\nimport persons from './person'\r\n\r\n//汇总所有的redux\r\nexport default combineReducers({\r\n    count,\r\n    persons,\r\n})","//该文件用于暴露一个store对象，整个应用只有一个store对象\r\n\r\n//引入createStore,专门用于创建redux中最为核心的store对象\r\nimport {createStore,applyMiddleware} from 'redux'\r\n//引入汇总之后的reducer\r\nimport reducer from './reducers'\r\n//引入redux-thunk，用于支持异步action\r\nimport thunk from 'redux-thunk'   //异步action还需要applyMiddleware中间件\r\n//引入redux-devtools-extension 开发者工具\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n//暴露store  \r\nexport default createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))\r\n","import {INCREMENT,DECREMENT} from '../constant'\r\n\r\nexport const increment = (data) =>({type:INCREMENT,data})\r\nexport const decrement = (data) =>({type:DECREMENT,data});\r\n//异步action，就是指action的值为函数，异步action中一般都会调用同步action，异步aciton不是必须要用的\r\nexport const anyceIncrement = (data,time) =>{\r\n    return (dispatch) =>{\r\n        setTimeout(() => {\r\n            dispatch(increment(data))\r\n        }, time);\r\n    }\r\n}\r\n","//引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport {\r\n    increment,\r\n    decrement,\r\n    anyceIncrement\r\n} from '../../redux/actions/count'\r\n//定义UI组件\r\nclass Count extends Component {\r\n    state = {\r\n        // sum:0,\r\n    }\r\n    add = ()=>{\r\n        const {value} = this.sumcont\r\n        // const {sum} = this.state\r\n        // this.setState({sum:sum+sumcont.value*1})\r\n        this.props.increment(value*1)\r\n    }\r\n    del = ()=>{\r\n        const {value} = this.sumcont\r\n        // const {sum} = this.state\r\n        // this.setState({sum:sum-sumcont.value*1})\r\n        this.props.decrement(value*1)\r\n    }\r\n    //奇数加\r\n    oddTerm = ()=>{\r\n        const {value} = this.sumcont\r\n        if(this.props.count % 2 !== 0){\r\n            this.props.increment(value*1)\r\n        }\r\n    }\r\n    //异步加\r\n    ybAdd = ()=>{\r\n        const {value} = this.sumcont\r\n        this.props.anyceIncrement(value*1,500)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                我是Count组件,下方总人数为：{this.props.personArr}\r\n                <div>当前求和为：{this.props.count}</div>\r\n                <select ref={c =>this.sumcont = c} name=\"\" id=\"\">\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>&nbsp;\r\n                <button onClick={this.add}>+</button>&nbsp;\r\n                <button onClick={this.del}>-</button>&nbsp;\r\n                <button onClick={this.oddTerm}>当前求和为奇数再加</button>&nbsp;\r\n                <button onClick={this.ybAdd}>异步加</button>&nbsp;\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//添加了容器组件store.subscribe就会自动监听了\r\n//简化的写法(connect自带了dispatch)\r\nexport default connect(\r\n    state =>({\r\n        count:state.count,\r\n        personArr:state.persons.length,\r\n    }),\r\n    {\r\n        increment,\r\n        decrement,\r\n        anyceIncrement,\r\n    }\r\n    )(Count)","import React, { Component } from 'react'\r\nimport {nanoid} from 'nanoid'\r\n//引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\nimport {addPerson} from '../../redux/actions/person'\r\n\r\nclass Person extends Component {\r\n    add = ()=>{\r\n        const name = this.name.value\r\n        const age = this.age.value\r\n        const personObj = { id:nanoid(),name,age}\r\n        this.name.value = ''\r\n        this.age.value = ''\r\n        // console.log(personObj);\r\n        this.props.addPerson(personObj)\r\n    }\r\n    render() {\r\n        const {personArr} = this.props\r\n        return (\r\n            <div>\r\n                <div>我是Person组件,上方组件的求和{this.props.count}</div>\r\n                <input ref={c => this.name=c} type=\"text\" placeholder='请输入姓名' />\r\n                <input ref={c => this.age=c} type=\"text\" placeholder='请输入年龄' />\r\n                <button onClick={this.add}>添加</button>\r\n                <ul>\r\n                    {\r\n                        personArr.map(personobj => <li key={personobj.id}>姓名：{personobj.name}---年龄{personobj.age}</li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//添加了容器组件store.subscribe就会自动监听了\r\n//简化的写法(connect自带了dispatch)\r\nexport default connect(\r\n    state =>({\r\n        personArr:state.persons,\r\n        count:state.count\r\n\r\n    }),//映射状态\r\n    {\r\n        addPerson,//映射操作状态的方法\r\n    }\r\n    )(Person)","import {ADD_PERSON} from '../constant'\r\n//创建怎加一个人的对象\r\nexport const addPerson = personobj =>({type:ADD_PERSON,data:personobj})","import React, { Component } from 'react'\r\nimport Count from './containers/Count' //引入的Count的容器组件\r\nimport Person from './containers/Person'//引入的Person的容器组件\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Count/>\r\n                <hr/>\r\n                <Person/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux' //给所有的容器组件传递store不用一个一个写了\r\nimport store from './redux/store'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    /* 此处需要用Provider包裹App，目的是让App所有的后代容器组件都能接收到store */\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n,document.getElementById('root'));\r\n"],"sourceRoot":""}